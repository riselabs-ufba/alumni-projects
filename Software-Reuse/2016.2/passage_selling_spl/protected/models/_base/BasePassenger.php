<?php /* BeginFeature:Passenger */
/**
 * This is the model base class for the table "passenger".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Passenger".
 *
 * Columns in table "passenger" available as properties of the model,
 * followed by relations of table "passenger" available as properties of the model.
 *
 * @property integer $id    
 * @property string $name    
 * @property string $title    
 * BeginFeature:DocumentType    
 * @property integer $id_document_type
 * EndFeature:DocumentType    
 * @property string $document    
 * @property string $address    
 * @property string $phone    
 * @property string $alternative_phone    
 * @property string $email    
 *
 * BeginFeature:DocumentType
 * @property DocumentType $idDocumentType
 * EndFeature:DocumentType
 * BeginFeature:Ticket
 * @property Ticket[] $tickets
 * EndFeature:Ticket
 */
abstract class BasePassenger extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'passenger';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Passenger|Passengers', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, '.
			/* BeginFeature:DocumentType */
			'id_document_type, '.
			/* EndFeature:DocumentType */
			'document, address, phone, email', 'required'),
			array('id_document_type', 'numerical', 'integerOnly'=>true),
			array('name, title, document, phone, alternative_phone, email', 'length', 'max'=>45),
			array('address', 'length', 'max'=>255),
			array('title, alternative_phone', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, title, '.
			/* BeginFeature:DocumentType */
			'id_document_type, '.
			/* EndFeature:DocumentType */
			'document, address, phone, alternative_phone, email', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
            		/* BeginFeature:DocumentType */
			'idDocumentType' => array(self::BELONGS_TO, 'DocumentType', 'id_document_type'),
            		/* EndFeature:DocumentType */
            		/* BeginFeature:Ticket */
			'tickets' => array(self::HAS_MANY, 'Ticket', 'id_passenger'),
            		/* EndFeature:Ticket */
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'title' => Yii::t('app', 'Title'),
			/* BeginFeature:DocumentType */
			'id_document_type' => null,
			/* EndFeature:DocumentType */
			'document' => Yii::t('app', 'Document'),
			'address' => Yii::t('app', 'Address'),
			'phone' => Yii::t('app', 'Phone'),
			'alternative_phone' => Yii::t('app', 'Alternative Phone'),
			'email' => Yii::t('app', 'Email'),
			/* BeginFeature:DocumentType */
			'idDocumentType' => null,
			/* EndFeature:DocumentType */
			/* BeginFeature:Ticket */
			'tickets' => null,
			/* EndFeature:Ticket */
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('title', $this->title, true);
		/* BeginFeature:DocumentType */
		$criteria->compare('id_document_type', $this->id_document_type);
		/* EndFeature:DocumentType */
		$criteria->compare('document', $this->document, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('alternative_phone', $this->alternative_phone, true);
		$criteria->compare('email', $this->email, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
/* EndFeature:Passenger */